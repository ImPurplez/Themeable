[manifest]
version = "1.4"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = "states/SongSelect.lua"
pattern = '''love.graphics.clear(1,1,1,1)'''
position = "at"
payload = '''love.graphics.clear(1,1,1,0)'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/SongSelect.lua"
pattern = '''love.graphics.setStencilTest('equal', 0)'''
position = "after"
payload = '''color() love.graphics.rectangle("fill", 0, 0, 600, 360)'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/SongSelect.lua"
pattern = '''love.graphics.setStencilTest('equal', 1)'''
position = "after"
payload = '''color() love.graphics.rectangle("fill", 0, 0, 600, 360)'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/SongSelect.lua"
pattern = '''love.graphics.draw(cs.bgCanv)'''
position = "at"
payload = ''''''
match_indent = false

[[patches]]
[patches.pattern]
target = "states/SongSelect.lua"
pattern = '''love.graphics.draw(self.canv)'''
position = "at"
payload = '''
love.graphics.draw(cs.bgCanv)
shuv.drawWithPalette(function()
	love.graphics.draw(self.canv)
end, {
	[0] = mods["themeable"].config.DefaultColors and { r = 255, g = 255, b = 255 } or { r = mods["themeable"].config.mainR, g = mods["themeable"].config.mainG, b = mods["themeable"].config.mainB },
	[1] = mods["themeable"].config.DefaultColors and { r = 0, g = 0, b = 0 } or { r = mods["themeable"].config.outlineR, g = mods["themeable"].config.outlineG, b = mods["themeable"].config.outlineB },
	[2] = self.menuItems[self.selection].bgRed or {r=255,g=255,b=255},
	[3] = self.menuItems[self.selection].bgBlue or {r=255,g=255,b=255},
	[4] = self.menuItems[self.selection].bgGreen or {r=255,g=255,b=255},
	[5] = self.menuItems[self.selection].bgYellow or {r=255,g=255,b=255},
	[6] = self.menuItems[self.selection].bgMagenta or {r=255,g=255,b=255},
	[7] = self.menuItems[self.selection].bgCyan or {r=255,g=255,b=255},
}, true)
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/AtomMap.lua"
pattern = '''shuv.pal[2] = { r = 205, g = 205, b = 205 }'''
position = "after"
payload = '''
if mods["themeable"].config.DefaultColors then
    shuv.pal[0] = {r = 255, g = 255, b = 255}
    shuv.pal[1] = {r = 0, g = 0, b = 0}
else
    shuv.pal[0] = { r = mods["themeable"].config.mainR, g = mods["themeable"].config.mainG, b = mods["themeable"].config.mainB}
    shuv.pal[1] = { r = mods["themeable"].config.outlineR, g = mods["themeable"].config.outlineG, b = mods["themeable"].config.outlineB}
    shuv.pal[2] = { r = mods["themeable"].config.bgVarR, g = mods["themeable"].config.bgVarG, b = mods["themeable"].config.bgVarB}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "states/Menu.lua"
pattern = '''shuv.pal[2] = {r= 205, g=205, b=205}'''
position = "after"
payload = '''
if mods["themeable"].config.DefaultColors then
    shuv.pal[0] = {r= 255, g=255, b=255}
    shuv.pal[1] = {r= 0, g=0, b=0}
    shuv.pal[2] = {r= 205, g=205, b=205}
else
    shuv.pal[0] = {r= mods["themeable"].config.mainR, g=mods["themeable"].config.mainG, b=mods["themeable"].config.mainB}
    shuv.pal[1] = {r= mods["themeable"].config.outlineR, g=mods["themeable"].config.outlineG, b=mods["themeable"].config.outlineB}
    shuv.pal[2] = {r= mods["themeable"].config.bgVarR, g=mods["themeable"].config.bgVarG, b=mods["themeable"].config.bgVarB}
end
'''
match_indent = true
